stages:
  - build

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  variables:
    DOCKER_REGISTRY: $CI_REGISTRY
    DOCKER_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
  script:
    - echo "Project ID - ${CI_PROJECT_ID}"
    - echo "Merge Request IID - ${CI_MERGE_REQUEST_IID}"
    - echo "Commit SHA - ${CI_COMMIT_SHA}"
    - echo "CI_REGISTRY - ${CI_REGISTRY}"
    - echo "CI_REGISTRY_IMAGE - ${CI_REGISTRY_IMAGE}"
    - echo $CI_JOB_TOKEN | /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile.prod --destination $CI_REGISTRY_IMAGE:$IMAGE_TAG --build-arg APP_NAME="$app" --skip-tls-verify

    - echo "Identifying affected apps by this commit..."
    - APPS_CHANGED=$(find apps -type d -mindepth 1 -maxdepth 1 -exec basename {} \;)

    - IMAGE_TAG="${CI_COMMIT_SHA:0:8}-${CI_MERGE_REQUEST_IID}"
    - echo "Using image tag - $IMAGE_TAG"

    - |
      if [ -n "$APPS_CHANGED" ]; then
        echo "Changed apps: $APPS_CHANGED";
        for app in $APPS_CHANGED; do
          if [ -f "${CI_PROJECT_DIR}/Dockerfile.prod" ]; then
            echo "Building image for $app";
            echo "Running command: /kaniko/executor --context '${CI_PROJECT_DIR}' --dockerfile '${CI_PROJECT_DIR}/Dockerfile.prod' --build-arg APP_NAME='$app' --destination '$DOCKER_REGISTRY_IMAGE/$app:$IMAGE_TAG'"
            /kaniko/executor --context "${CI_PROJECT_DIR}" \
              --dockerfile "${CI_PROJECT_DIR}/Dockerfile.prod" \
              --build-arg APP_NAME="$app" \
              --destination "$DOCKER_REGISTRY_IMAGE/$app:$IMAGE_TAG";
          else
            echo "Skipping $app - Dockerfile.prod not found";
          fi
        done;
      else
        echo "No affected apps found.";
      fi
