stages:
  - build

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - echo "Project ID - ${CI_PROJECT_ID}"
    - echo "Merge Request IID - ${CI_MERGE_REQUEST_IID}"
    - echo "Commit SHA - ${CI_COMMIT_SHA}"

    # Ensure we have a full clone
    - git fetch --unshallow || echo "Already a full clone"

    # Identify affected apps by this commit
    - echo "Identifying affected apps by this commit..."
    - APPS_CHANGED=$(git diff --name-only origin/main...$CI_COMMIT_SHA | grep '^apps/' | cut -d'/' -f2 | sort -u)

    # Define a tag for the image using the commit hash and merge request ID
    - IMAGE_TAG="${CI_COMMIT_SHA:0:8}-${CI_MERGE_REQUEST_IID}"
    - echo "Using image tag - $IMAGE_TAG"

    # Loop through affected apps and build them
    - |
      if [ -n "$APPS_CHANGED" ]; then
        echo "Changed apps: $APPS_CHANGED";
        for app in $APPS_CHANGED; do
          echo "Building image for $app";
          /kaniko/executor --context "${CI_PROJECT_DIR}/apps/$app" \
            --dockerfile "${CI_PROJECT_DIR}/apps/$app/Dockerfile.prod" \
            --destination gcr.io/myregistry/$app:$IMAGE_TAG;  # Usando el hash y el ID de la merge request
        done;
      else
        echo "No affected apps found.";
      fi
  tags:
    - kaniko
