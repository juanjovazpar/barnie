stages:
  - build

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - echo "Project ID - ${CI_PROJECT_ID}"
    - echo "Commit SHA - ${CI_COMMIT_SHA}"

    - echo "Identifying affected apps by this commit..."
    - APPS_CHANGED=$(find apps -type d -mindepth 1 -maxdepth 1 -exec basename {} \;)

    - IMAGE_TAG="${CI_COMMIT_SHA:0:8}-${CI_MERGE_REQUEST_IID}"
    - echo "Using image tag - $IMAGE_TAG"

    - |
      echo "Checking and creating repositories in Harbor for affected apps...";
      for app in $APPS_CHANGED; do
        REPO_EXISTS=$(curl -s -u "$HARBOR_USERNAME:$HARBOR_PASSWORD" \
          "http://harbor-registry.devops.svc.cluster.local/api/repositories?project_id=barnie&name=barnie/$app" \
          | jq '.[] | select(.name == "barnie/'$app'")' || echo "null")
        
        if [ "$REPO_EXISTS" == "null" ]; then
          echo "Repository for $app does not exist. Creating now...";
          curl -s -u "$HARBOR_USERNAME:$HARBOR_PASSWORD" -X POST \
            "http://harbor-registry.devops.svc.cluster.local/api/repositories?project_id=barnie" \
            -H "Content-Type: application/json" \
            -d '{"name": "barnie/'$app'"}';
        else
          echo "Repository for $app already exists. Skipping creation.";
        fi
      done

    - |
      if [ -n "$APPS_CHANGED" ]; then
        echo "Changed apps: $APPS_CHANGED";
        for app in $APPS_CHANGED; do
          if [ -f "${CI_PROJECT_DIR}/Dockerfile.prod" ]; then
            echo "Building image for $app";
            /kaniko/executor --context "${CI_PROJECT_DIR}" \
              --dockerfile "${CI_PROJECT_DIR}/Dockerfile.prod" \
              --build-arg APP_NAME="$app" \
              --tarPath "/tmp/${app}-${IMAGE_TAG}.tar" \
              --no-push;
            
            echo "Pushing image to Harbor registry for $app";
            /kaniko/executor --context "${CI_PROJECT_DIR}" \
              --dockerfile "${CI_PROJECT_DIR}/Dockerfile.prod" \
              --build-arg APP_NAME="$app" \
              --destination "harbor-registry.devops.svc.cluster.local/barnie/$app:$IMAGE_TAG" \
              --skip-tls-verify;
          else
            echo "Skipping $app - Dockerfile.prod not found";
          fi
        done;
      else
        echo "No affected apps found.";
      fi
